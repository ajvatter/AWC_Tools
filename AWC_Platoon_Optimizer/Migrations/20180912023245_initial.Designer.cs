// <auto-generated />
using AWC_Platoon_Optimizer.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AWC_Platoon_Optimizer.Migrations
{
    [DbContext(typeof(AwcContext))]
    [Migration("20180912023245_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AWC_Entities.Entities.Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<bool>("Visible");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AWC_Entities.Entities.Guild", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("Members");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("AWC_Entities.Entities.Player", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GuildId");

                    b.Property<int>("GuildMemberLevel");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("AWC_Entities.Entities.Unit", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CombatType");

                    b.Property<int>("ForceAlignment");

                    b.Property<string>("Name");

                    b.Property<bool>("Obtainable");

                    b.Property<string>("TextId");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("AWC_Entities.Entities.Unit_Category", b =>
                {
                    b.Property<string>("UnitId");

                    b.Property<string>("CategoryId");

                    b.HasKey("UnitId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Unit_Category");
                });

            modelBuilder.Entity("AWC_Entities.Entities.Player", b =>
                {
                    b.HasOne("AWC_Entities.Entities.Guild", "Guild")
                        .WithMany("Roster")
                        .HasForeignKey("GuildId");
                });

            modelBuilder.Entity("AWC_Entities.Entities.Unit_Category", b =>
                {
                    b.HasOne("AWC_Entities.Entities.Category", "Category")
                        .WithMany("Units")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AWC_Entities.Entities.Unit", "Unit")
                        .WithMany("Categories")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
